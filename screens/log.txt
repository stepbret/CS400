==11917== Memcheck, a memory error detector
==11917== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==11917== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info
==11917== Command: mainprog
==11917== Parent PID: 24918
==11917== 
==11917== Invalid read of size 8
==11917==    at 0x40184D: displayScreen(StaticScreen*) (in /nfs/stak/students/m/mcinnisb/cs467/screens/mainprog)
==11917==    by 0x401AD1: main (in /nfs/stak/students/m/mcinnisb/cs467/screens/mainprog)
==11917==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==11917== 
==11917== 
==11917== Process terminating with default action of signal 11 (SIGSEGV)
==11917==  Access not within mapped region at address 0x0
==11917==    at 0x40184D: displayScreen(StaticScreen*) (in /nfs/stak/students/m/mcinnisb/cs467/screens/mainprog)
==11917==    by 0x401AD1: main (in /nfs/stak/students/m/mcinnisb/cs467/screens/mainprog)
==11917==  If you believe this happened as a result of a stack
==11917==  overflow in your program's main thread (unlikely but
==11917==  possible), you can try to increase the size of the
==11917==  main thread stack using the --main-stacksize= flag.
==11917==  The main thread stack size used in this run was 8388608.
==11917== 
==11917== HEAP SUMMARY:
==11917==     in use at exit: 161,331 bytes in 344 blocks
==11917==   total heap usage: 382 allocs, 38 frees, 166,523 bytes allocated
==11917== 
==11917== LEAK SUMMARY:
==11917==    definitely lost: 0 bytes in 0 blocks
==11917==    indirectly lost: 0 bytes in 0 blocks
==11917==      possibly lost: 0 bytes in 0 blocks
==11917==    still reachable: 161,331 bytes in 344 blocks
==11917==         suppressed: 0 bytes in 0 blocks
==11917== Rerun with --leak-check=full to see details of leaked memory
==11917== 
==11917== For counts of detected and suppressed errors, rerun with: -v
==11917== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 1 from 1)
